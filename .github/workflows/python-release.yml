name: Python Semantic Release

on:
  push:
    branches: [develop, main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.get_version.outputs.version }}
      tag: ${{ steps.get_version.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install python-semantic-release

      - name: Configure Git
        run: |
          git config --global user.name "semantic-release"
          git config --global user.email "semantic-release@users.noreply.github.com"

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.14.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "semantic-release"
          git_committer_email: "semantic-release@users.noreply.github.com"

      - name: Get version info
        id: get_version
        run: |
          # Get the latest tag (version) from Git
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          VERSION=${LATEST_TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "## Semantic Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Released**: ${{ steps.release.outputs.released }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ steps.get_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${GITHUB_REF##*/}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.release.outputs.released }}" = "true" ]; then
            echo "- **Status**: ✅ New release created" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ℹ️ No release needed" >> $GITHUB_STEP_SUMMARY
          fi